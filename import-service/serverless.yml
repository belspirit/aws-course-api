service: rsschool-node-aws-s3-task5

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1

  environment:
    SQS_URL:
      Ref: catalogItemsQueue
    SNS_TOPIC_NAME:
      Ref: createProductTopic

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
      Resource:
        - arn:aws:s3:::rsschool-node-aws-s3-task5
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource:
        - arn:aws:s3:::rsschool-node-aws-s3-task5/*
    - Effect: "Allow"
      Action:
        - "sqs:*"
      Resource:
        - Fn::GetAtt: [catalogItemsQueue, Arn]
    - Effect: "Allow"
      Action:
        - "sns:*"
      Resource:
        Ref: createProductTopic

resources:
  Resources:
    catalogItemsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: rsschool-node-aws-sqs-sns-queue
    createProductTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: rsschool-node-aws-sqs-sns-topic
    SNSSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: sergey.labetik@gmail.com
        Protocol: email
        TopicArn:
          Ref: createProductTopic

functions:
  catalogBatchProcess:
    handler: catalogBatchProcess/handler.catalogBatchProcess
    events:
      - sqs:
          batchSize: 5
          arn:
            Fn::GetAtt:
              - catalogItemsQueue
              - Arn
  importProductsFile:
    handler: importProductsFile/handler.importProductsFile
    events:
      - httpApi:
          path: /import
          method: get
          request:
            parameters:
              querystrings:
                name: true
          cors: true
  importFileParser:
    handler: importFileParser/handler.importFileParser
    events:
      - s3:
          bucket: rsschool-node-aws-s3-task5
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true
